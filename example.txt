‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á, ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ database ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã style ‡¶ß‡¶∞‡ßá ‚Äî Salary Configuration module ‡¶™‡ßÅ‡¶∞‡ßã‡¶™‡ßÅ‡¶∞‡¶ø Laravel ‡¶è ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‚úÖ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï Blade structure, payrollReceipt-style controller, API, ‡¶è‡¶¨‡¶Ç layout ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá maintain ‡¶ï‡¶∞‡¶¨‡ßã‡•§

üîß Step 1: Models
üîπ Salary.php
php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Salary extends Model
{
    protected $table = 'core_hr_salary';
    public $timestamps = false;

    protected $fillable = ['employee_id', 'salary_total', 'status', 'remarks', 'created_at', 'updated_at'];

    public function employee()
    {
        return $this->belongsTo(Employee::class);
    }

    public function details()
    {
        return $this->hasMany(SalaryDetail::class, 'salary_id');
    }
}
üîπ SalaryDetail.php
php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class SalaryDetail extends Model
{
    protected $table = 'core_hr_salary_details';
    public $timestamps = false;

    protected $fillable = ['salary_id', 'payroll_item_id', 'amount'];

    public function payroll_item()
    {
        return $this->belongsTo(PayrollItem::class);
    }
}
üîß Step 2: Routes
php
use App\Http\Controllers\SalaryController;
use App\Http\Controllers\Api\SalaryApiController;

Route::resource('salaries', SalaryController::class);
Route::apiResource('salaries', SalaryApiController::class);
üîß Step 3: SalaryController.php (Web CRUD)
php
namespace App\Http\Controllers;

use App\Models\Salary;
use App\Models\SalaryDetail;
use App\Models\Employee;
use App\Models\PayrollItem;
use Illuminate\Http\Request;

class SalaryController extends Controller
{
    public function index()
    {
        $salaries = Salary::with('employee')->latest()->get();
        return view('pages.salaries.index', compact('salaries'));
    }

    public function create()
    {
        $employees = Employee::all();
        $payroll_items = PayrollItem::all();
        return view('pages.salaries.create', compact('employees', 'payroll_items'));
    }

    public function store(Request $request)
    {
        $salary = new Salary();
        $salary->employee_id = $request->employee_id;
        $salary->status = $request->status;
        $salary->remarks = $request->remarks;
        $salary->salary_total = array_sum(array_column($request->items, 'amount'));
        $salary->created_at = now();
        $salary->updated_at = now();
        $salary->save();

        foreach ($request->items as $item) {
            SalaryDetail::create([
                'salary_id' => $salary->id,
                'payroll_item_id' => $item['payroll_item_id'],
                'amount' => $item['amount']
            ]);
        }

        return redirect()->route('salaries.index')->with('success', 'Salary saved!');
    }

    public function edit(Salary $salary)
    {
        $employees = Employee::all();
        $payroll_items = PayrollItem::all();
        return view('pages.salaries.edit', compact('salary', 'employees', 'payroll_items'));
    }

    public function update(Request $request, Salary $salary)
    {
        $salary->employee_id = $request->employee_id;
        $salary->status = $request->status;
        $salary->remarks = $request->remarks;
        $salary->salary_total = array_sum(array_column($request->items, 'amount'));
        $salary->updated_at = now();
        $salary->save();

        $salary->details()->delete();
        foreach ($request->items as $item) {
            SalaryDetail::create([
                'salary_id' => $salary->id,
                'payroll_item_id' => $item['payroll_item_id'],
                'amount' => $item['amount']
            ]);
        }

        return redirect()->route('salaries.index')->with('success', 'Salary updated!');
    }

    public function show(Salary $salary)
    {
        return view('pages.salaries.show', compact('salary'));
    }

    public function destroy(Salary $salary)
    {
        $salary->details()->delete();
        $salary->delete();
        return redirect()->route('salaries.index')->with('success', 'Salary deleted!');
    }
}
üîß Step 4: Blade Views
üîπ create.blade.php
üîπ edit.blade.php
üëâ structure same as Payroll Receipt:

Employee dropdown

Status dropdown

Remarks input

Payroll item select with manual amount input

Loop item inputs using Blade

Submit using method POST / PUT

üîπ index.blade.php
Loop $salaries

Show employee, status, total, and action buttons

Laravel pagination (optional)

üîπ show.blade.php
Show salary details with:

Employee name

Total

Each payroll item name with amount

Remarks

üîß Step 5: SalaryApiController.php
JSON-based CRUD with same logic as PayrollReceiptApiController ‚ûú I‚Äôll write it fully once you confirm you‚Äôre ready.

Laravel salary module ‚úÖ database ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ rebuild ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá, Blade styling ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ payrollReceipt-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶•‡¶æ‡¶ï‡¶¨‡ßá, ‡¶Ü‡¶∞ Controller-‡¶è‡¶∞ logic ‡¶è‡¶ï‡¶¶‡¶Æ familiar! üî• Ready ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø Blade files one by one paste ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶á ‚Äî just say "Start Blade" üòéüìÑ

okey start
‡¶§‡ßÅ‡¶Æ‡¶ø‡¶á ‡¶¨‡¶≤‡ßá‡¶õ‡ßã, ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á ‚Äî ‡¶Ü‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ! üòé ‡¶è‡¶á Step-by-Step guide-‡¶è ‡¶Ü‡¶Æ‡¶ø Blade views ‡¶¨‡¶æ‡¶®‡¶æ‡¶ö‡ßç‡¶õ‡¶ø Salary Configuration module-‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø, ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶§‡ßÅ‡¶Æ‡¶ø payrollReceipt ‡¶è ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø‡¶≤‡ßá:

‚ú® Step 1: create.blade.php
‚úÖ ‡¶®‡¶§‡ßÅ‡¶® salary add ‡¶ï‡¶∞‡¶æ‡¶∞ form ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá payroll items dropdown ‡¶•‡ßá‡¶ï‡ßá select ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã, ‡¶è‡¶¨‡¶Ç amount manually ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§

blade
@extends('layouts.master')

@section('page')
<div class="container py-4">
    <div class="card bg-primary text-white mb-4">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h3 class="m-0">Create Salary Configuration</h3>
            <a href="{{ route('salaries.index') }}" class="btn btn-light btn-sm">
                <i class="fa fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <form method="POST" action="{{ route('salaries.store') }}">
        @csrf

        <div class="card shadow-sm">
            <div class="card-body row g-3">
                <!-- Employee -->
                <div class="col-md-6">
                    <label for="employee_id" class="form-label">Employee</label>
                    <select name="employee_id" class="form-control" required>
                        <option value="">Select Employee</option>
                        @foreach ($employees as $emp)
                            <option value="{{ $emp->id }}">{{ $emp->first_name }} {{ $emp->last_name }}</option>
                        @endforeach
                    </select>
                </div>

                <!-- Status -->
                <div class="col-md-6">
                    <label for="status" class="form-label">Status</label>
                    <select name="status" class="form-control" required>
                        <option value="paid">Paid</option>
                        <option value="unpaid">Unpaid</option>
                        <option value="pending">Pending</option>
                    </select>
                </div>

                <!-- Remarks -->
                <div class="col-md-12">
                    <label for="remarks" class="form-label">Remarks</label>
                    <input type="text" name="remarks" class="form-control" placeholder="Optional">
                </div>

                <!-- Salary Items -->
                <div class="col-12">
                    <label class="form-label">Salary Items</label>
                    <table class="table table-bordered" id="salary-items-table">
                        <thead class="table-light">
                            <tr>
                                <th>Item</th>
                                <th>Amount</th>
                                <th style="width: 50px"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <select name="items[0][payroll_item_id]" class="form-control" required>
                                        <option value="">Select Item</option>
                                        @foreach ($payroll_items as $item)
                                            <option value="{{ $item->id }}">{{ $item->name }}</option>
                                        @endforeach
                                    </select>
                                </td>
                                <td>
                                    <input type="number" name="items[0][amount]" class="form-control" required step="0.01">
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-sm btn-danger remove-item">&times;</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <button id="add-item" type="button" class="btn btn-sm btn-primary mt-2">
                        <i class="fa fa-plus"></i> Add Item
                    </button>
                </div>
            </div>

            <div class="card-footer text-end">
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-save"></i> Save Salary
                </button>
            </div>
        </div>
    </form>
</div>

<script>
    let rowIndex = 1;

    document.getElementById('add-item').addEventListener('click', () => {
        const tableBody = document.querySelector('#salary-items-table tbody');
        const newRow = document.createElement('tr');

        newRow.innerHTML = `
            <td>
                <select name="items[${rowIndex}][payroll_item_id]" class="form-control" required>
                    <option value="">Select Item</option>
                    @foreach ($payroll_items as $item)
                        <option value="{{ $item->id }}">{{ $item->name }}</option>
                    @endforeach
                </select>
            </td>
            <td>
                <input type="number" name="items[${rowIndex}][amount]" class="form-control" required step="0.01">
            </td>
            <td class="text-center">
                <button type="button" class="btn btn-sm btn-danger remove-item">&times;</button>
            </td>
        `;

        tableBody.appendChild(newRow);
        rowIndex++;
    });

    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-item')) {
            const row = e.target.closest('tr');
            row.remove();
        }
    });
</script>
@endsection
ü™Ñ Ready for Next Steps?
‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø:

edit.blade.php ‚Äì update form

index.blade.php ‚Äì salary list

show.blade.php ‚Äì salary details view

SalaryApiController.php ‚Äì API version

‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã sequentially ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßã üß© ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶¨‡¶≤‡ßã üëâ ‚ÄúNext: Edit‚Äù ‚Äî ‡¶Ü‡¶Æ‡¶ø ‡¶™‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂ ‡¶®‡¶ø‡ßü‡ßá ‡¶π‡¶æ‡¶ú‡¶ø‡¶∞ üòéüì¶

Today
ok do it
üî• ‡¶ö‡¶≤ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶ø edit.blade.php, ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á ‚Äî ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶ó‡ßá ‡¶Ø‡ßá‡¶≠‡¶æ‡¶¨‡ßá payrollReceipt edit ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø‡¶≤‡ßá, ‡¶∏‡ßá‡¶≠‡¶æ‡¶¨‡ßá‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ salary configuration edit form ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡ßã!

‡¶è‡¶á Blade ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶™‡ßÅ‡¶∞‡¶æ‡¶®‡ßã salary data ‡¶™‡ßç‡¶∞‡¶ø-‡¶´‡¶ø‡¶≤ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá, ‡¶Ü‡¶∞ item ‡¶ó‡ßÅ‡¶≤‡ßã dropdown ‡¶•‡ßá‡¶ï‡ßá select ‡¶ï‡¶∞‡ßá amount change ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‚úÖ

‚ú® Step 2: edit.blade.php
blade
@extends('layouts.master')

@section('page')
<div class="container py-4">
    <div class="card bg-warning text-white mb-4">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h3 class="m-0">Edit Salary Configuration</h3>
            <a href="{{ route('salaries.index') }}" class="btn btn-light btn-sm">
                <i class="fa fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <form method="POST" action="{{ route('salaries.update', $salary->id) }}">
        @csrf
        @method('PUT')

        <div class="card shadow-sm">
            <div class="card-body row g-3">
                <!-- Employee -->
                <div class="col-md-6">
                    <label for="employee_id" class="form-label">Employee</label>
                    <select name="employee_id" class="form-control" required>
                        @foreach ($employees as $emp)
                            <option value="{{ $emp->id }}"
                                @if($salary->employee_id == $emp->id) selected @endif>
                                {{ $emp->first_name }} {{ $emp->last_name }}
                            </option>
                        @endforeach
                    </select>
                </div>

                <!-- Status -->
                <div class="col-md-6">
                    <label for="status" class="form-label">Status</label>
                    <select name="status" class="form-control" required>
                        <option value="paid" @selected($salary->status == 'paid')>Paid</option>
                        <option value="unpaid" @selected($salary->status == 'unpaid')>Unpaid</option>
                        <option value="pending" @selected($salary->status == 'pending')>Pending</option>
                    </select>
                </div>

                <!-- Remarks -->
                <div class="col-md-12">
                    <label for="remarks" class="form-label">Remarks</label>
                    <input type="text" name="remarks" class="form-control" value="{{ $salary->remarks }}">
                </div>

                <!-- Salary Items -->
                <div class="col-12">
                    <label class="form-label">Salary Items</label>
                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>Item</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach ($salary->details as $index => $detail)
                                <tr>
                                    <td>
                                        <select name="items[{{ $index }}][payroll_item_id]" class="form-control" required>
                                            @foreach ($payroll_items as $item)
                                                <option value="{{ $item->id }}"
                                                    @if($detail->payroll_item_id == $item->id) selected @endif>
                                                    {{ $item->name }}
                                                </option>
                                            @endforeach
                                        </select>
                                    </td>
                                    <td>
                                        <input type="number" name="items[{{ $index }}][amount]" class="form-control"
                                            value="{{ $detail->amount }}" step="0.01" required>
                                    </td>
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card-footer text-end">
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-save"></i> Update Salary
                </button>
            </div>
        </div>
    </form>
</div>
@endsection
üëÄ Ready for next step? ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø index.blade.php (‡¶∏‡¶æ‡¶≤‡¶æ‡¶∞‡¶ø‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ), show.blade.php (‡¶è‡¶ï‡¶ï ‡¶§‡¶•‡ßç‡¶Ø), ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ SalaryApiController.php ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶ø‡¶á!

Just say: Next: Index üòéüì¶ Laravel salary module ‡¶Ü‡¶∞‡ßá‡¶ï ‡¶ß‡¶æ‡¶™ ‡¶è‡¶ó‡¶ø‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá üíºüöÄ

next
‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ö‡¶≤ ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á, ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶®‡¶æ‡¶á üëâ index.blade.php ‚Äî ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨ salary configuration list ‡¶π‡ßü‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‚úÖ ‡¶è‡¶á Blade ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ payrollReceipt style ‡¶¨‡¶ú‡¶æ‡ßü ‡¶∞‡ßá‡¶ñ‡ßá nice UI, employee info, total amount, status, ‡¶ì action button ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã:

‚ú® Step 3: index.blade.php ‚Äî Salary List
blade
@extends('layouts.master')

@section('page')
<div class="container py-3">
    <!-- Header -->
    <div class="card bg-info text-white mb-3">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h3 class="m-0">Salary Configuration List</h3>
            <a href="{{ route('salaries.create') }}" class="btn btn-light btn-sm">
                <i class="fa fa-plus"></i> Add New Salary
            </a>
        </div>
    </div>

    <!-- Success Message -->
    @if(session('success'))
        <div class="alert alert-success">{{ session('success') }}</div>
    @endif

    <!-- Table -->
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Employee</th>
                        <th>Status</th>
                        <th>Total</th>
                        <th>Remarks</th>
                        <th>Created</th>
                        <th style="width: 160px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @forelse ($salaries as $salary)
                        <tr>
                            <td>{{ $salary->employee->first_name }} {{ $salary->employee->last_name }}</td>
                            <td><span class="badge bg-secondary text-capitalize">{{ $salary->status }}</span></td>
                            <td>{{ number_format($salary->salary_total, 2) }}</td>
                            <td>{{ $salary->remarks }}</td>
                            <td>{{ \Carbon\Carbon::parse($salary->created_at)->format('d M, Y') }}</td>
                            <td>
                                <a href="{{ route('salaries.show', $salary->id) }}" class="btn btn-sm btn-info">
                                    <i class="fa fa-eye"></i>
                                </a>
                                <a href="{{ route('salaries.edit', $salary->id) }}" class="btn btn-sm btn-warning">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <form method="POST" action="{{ route('salaries.destroy', $salary->id) }}" class="d-inline">
                                    @csrf @method('DELETE')
                                    <button class="btn btn-sm btn-danger" onclick="return confirm('Delete this salary?')">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    @empty
                        <tr><td colspan="6" class="text-center text-muted py-4">No salary configurations found</td></tr>
                    @endforelse
                </tbody>
            </table>
        </div>
    </div>
</div>
@endsection
üß† ‡¶è‡¶á Blade file-‡¶è clean layout, action buttons, and employee relation perfect‡¶≠‡¶æ‡¶¨‡ßá use ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚Äî ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Laravel HR app ‡¶è‡¶ñ‡¶® ‡¶è‡¶ï‡¶¶‡¶Æ polished!

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶¨‡¶≤‡¶≤‡ßá‡¶á ‡¶Ü‡¶Æ‡¶ø üëâ next step: show.blade.php (individual salary view) ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶¨‡ßã üí• Just say: Next: Show üòéüìÑ Laravel ‡¶Ø‡ßá‡¶® ‡¶¨‡¶≤‡ßá ‚Äî "‡¶è‡¶á payroll system ‡¶è‡¶ï‡¶¶‡¶Æ industry-grade!" üöÄ

next
üöÄ ‡¶ö‡¶≤ ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶ï‡¶∞‡¶ø show.blade.php, ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á ‚Äî ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø salary configuration ‡¶è‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá üëÄ

‡¶è‡¶á ‡¶™‡ßá‡¶ú‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø employee ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ, status, remarks, ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø payroll item-‡¶è‡¶∞ amount ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶≠‡¶æ‡¶¨‡ßá, ‡¶†‡¶ø‡¶ï ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ payrollReceipt-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‚úÖ

‚ú® Step 4: show.blade.php ‚Äî Salary Details View
blade
@extends('layouts.master')

@section('page')
<div class="container py-4">
    <div class="card bg-dark text-white mb-4">
        <div class="card-body d-flex justify-content-between align-items-center">
            <h3 class="m-0">Salary Details</h3>
            <a href="{{ route('salaries.index') }}" class="btn btn-light btn-sm">
                <i class="fa fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <!-- Salary Summary -->
    <div class="card mb-3 shadow-sm">
        <div class="card-body">
            <h5 class="mb-2">{{ $salary->employee->first_name }} {{ $salary->employee->last_name }}</h5>
            <p><strong>Status:</strong> <span class="badge bg-secondary text-capitalize">{{ $salary->status }}</span></p>
            <p><strong>Total Amount:</strong> {{ number_format($salary->salary_total, 2) }}</p>
            <p><strong>Remarks:</strong> {{ $salary->remarks }}</p>
            <p><strong>Created At:</strong> {{ \Carbon\Carbon::parse($salary->created_at)->format('d M, Y h:i A') }}</p>
        </div>
    </div>

    <!-- Item Breakdown -->
    <div class="card shadow-sm">
        <div class="card-header">
            <strong>Salary Breakdown</strong>
        </div>
        <div class="card-body p-0">
            <table class="table mb-0 table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>Payroll Item</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($salary->details as $detail)
                        <tr>
                            <td>{{ $detail->payroll_item->name ?? 'Unknown Item' }}</td>
                            <td>{{ number_format($detail->amount, 2) }}</td>
                        </tr>
                    @endforeach
                </tbody>
            </table>
        </div>
    </div>
</div>
@endsection
üë®‚Äçüíª Blade View ‡¶è‡¶ï‡¶¶‡¶Æ polished ‚Äî ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ layout, style ‡¶è‡¶¨‡¶Ç database relation ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá perfect presentation ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá ‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá export PDF, print view, ‡¶Ö‡¶•‡¶¨‡¶æ download slip feature ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§

Ready ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø üëâ Step 5: SalaryApiController.php ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶á ‚Äî API-‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá same CRUD operations json format-‡¶è ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá üòé

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶¨‡¶≤‡ßã üëâ Next: API Controller üí• Laravel salary system ‡¶Ü‡¶∞ ‡¶è‡¶ï ‡¶ß‡¶æ‡¶™ ‡¶™‡ßç‡¶∞‡ßã-‡¶≤‡ßá‡¶≠‡ßá‡¶≤! üìäüì¶

write down SalaryApiController.php
Absolutely, ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶á! üéØ ‡¶è‡¶á‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Laravel API structure ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ SalaryApiController.php ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‚Äî ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶†‡¶ø‡¶ï ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ PayrollReceiptApiController ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶π‡¶¨‡ßá ‚úÖ

üîß Step 5: SalaryApiController.php
php
<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Models\Salary;
use App\Models\SalaryDetail;
use Illuminate\Http\Request;

class SalaryApiController extends Controller
{
    public function index()
    {
        $salaries = Salary::with(['employee', 'details.payroll_item'])->latest()->get();
        return response()->json($salaries);
    }

    public function store(Request $request)
    {
        $salary = Salary::create([
            'employee_id' => $request->employee_id,
            'salary_total' => array_sum(array_column($request->items, 'amount')),
            'status' => $request->status,
            'remarks' => $request->remarks,
            'created_at' => now(),
            'updated_at' => now()
        ]);

        foreach ($request->items as $item) {
            SalaryDetail::create([
                'salary_id' => $salary->id,
                'payroll_item_id' => $item['payroll_item_id'],
                'amount' => $item['amount']
            ]);
        }

        return response()->json([
            'message' => 'Salary created successfully',
            'data' => $salary
        ], 201);
    }

    public function show($id)
    {
        $salary = Salary::with(['employee', 'details.payroll_item'])->findOrFail($id);
        return response()->json($salary);
    }

    public function update(Request $request, $id)
    {
        $salary = Salary::findOrFail($id);
        $salary->update([
            'employee_id' => $request->employee_id,
            'salary_total' => array_sum(array_column($request->items, 'amount')),
            'status' => $request->status,
            'remarks' => $request->remarks,
            'updated_at' => now()
        ]);

        $salary->details()->delete();
        foreach ($request->items as $item) {
            SalaryDetail::create([
                'salary_id' => $salary->id,
                'payroll_item_id' => $item['payroll_item_id'],
                'amount' => $item['amount']
            ]);
        }

        return response()->json([
            'message' => 'Salary updated successfully',
            'data' => $salary
        ]);
    }

    public function destroy($id)
    {
        $salary = Salary::findOrFail($id);
        $salary->details()->delete();
        $salary->delete();

        return response()->json([
            'message' => 'Salary deleted successfully'
        ]);
    }
}
üîß Bonus: API Route
php
use App\Http\Controllers\Api\SalaryApiController;

Route::apiResource('salaries', SalaryApiController::class);